name: Release

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read

jobs:
  pre-check:
    name: Pre Check
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        image:
          - excalidraw
          - pypiserver
          - resvg
          - sally
    outputs:
      excalidraw_changed: ${{ steps.check.outputs.excalidraw_changed }}
      pypiserver_changed: ${{ steps.check.outputs.pypiserver_changed }}
      resvg_changed: ${{ steps.check.outputs.resvg_changed }}
      sally_changed: ${{ steps.check.outputs.sally_changed }}
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1

      - name: Get previous revision
        id: previous
        run: |
          docker pull ghcr.io/harryzcy/${{ matrix.image }}:latest
          previous=$(docker inspect ghcr.io/harryzcy/${{ matrix.image }} | jq '.[0]["Config"]["Labels"]["org.opencontainers.image.revision"]')
          if [ -z "$previous" ]; then
            echo "No previous revision found"
            previous="HEAD"
          fi
          echo "previous=${previous}" >> $GITHUB_OUTPUT

      - name: Get current revision
        id: current
        run: |
          current=$(git rev-parse HEAD)
          if [ -z "$current" ]; then
            echo "No current revision found"
            exit 1
          fi
          echo "current=${current}" >> $GITHUB_OUTPUT

      - name: Check directory changed between revisions
        id: check
        run: |
          set +e
          output=$(git diff --quiet ${{ steps.previous.outputs.previous }} ${{ steps.current.outputs.current }} -- images/${{ matrix.image }})
          status="$?"
          echo "status: $status"
          echo "$output"
          if [ "$status" -ne 0 ]; then
            echo "Directory images/${{ matrix.image }} changed between revisions"
            echo "${{ matrix.image }}_changed=true" >> $GITHUB_OUTPUT
          else
            echo "Directory images/${{ matrix.image }} did not change between revisions"
            echo "${{ matrix.image }}_changed=false" >> $GITHUB_OUTPUT
          fi

  release:
    name: Release Docker images
    runs-on: ubuntu-24.04
    needs: pre-check
    permissions:
      packages: write
    strategy:
      fail-fast: false
      matrix:
        image:
          - excalidraw
          - pypiserver
          - sally
        include:
          - image: resvg
            platforms: linux/amd64
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@4574d27a4764455b42196d70a065bc6853246a25 # v3.4.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1

      - name: Build
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          context: images/${{ matrix.image }}
          push: false
          load: true
          tags: ${{ matrix.image }}:info

      - name: Get version
        id: version
        run: |
          docker create --name info ${{ matrix.image }}:info
          docker cp info:/VERSION VERSION
          version=$(cat VERSION)
          rm VERSION
          echo "version=${version}" >> $GITHUB_OUTPUT

      - name: Check if image directory changed
        id: check
        run: |
          echo '${{ toJSON(needs.pre-check.outputs) }}'
          changed=$(echo '${{ toJSON(needs.pre-check.outputs) }}' | jq -r '.${{ matrix.image }}_changed')
          echo "changed: $changed"
          echo "changed=${changed}" >> $GITHUB_OUTPUT

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@c1e51972afc2121e065aed6d45c65596fe445f3f # v5.8.0
        with:
          images: ghcr.io/harryzcy/${{ matrix.image }}
          tags: |
            type=semver,pattern={{version}},value=${{ steps.version.outputs.version }}
            type=semver,pattern={{major}}.{{minor}},value=${{ steps.version.outputs.version }}
            type=semver,pattern={{major}},value=${{ steps.version.outputs.version }}
            type=sha

      - name: Login to GitHub Container Registry
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3.5.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set platforms (push)
        if: ${{ github.event_name == 'push'}}
        run: echo "platforms=linux/amd64" >> $GITHUB_OUTPUT

      - name: Set platforms (default)
        if: ${{ github.event_name == 'pull_request'}}
        run: echo "platforms=linux/amd64,linux/arm64,linux/arm/v7" >> $GITHUB_OUTPUT

      - name: Set platforms (override)
        if: ${{ matrix.platforms }}
        run: echo "platforms=${{ matrix.platforms }}" >> $GITHUB_OUTPUT

      - name: Build and push
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          context: images/${{ matrix.image }}
          platforms: ${{ github.event_name == 'push' && 'linux/amd64,linux/arm64,linux/arm/v7' || 'linux/amd64' }}
          push: ${{ github.event_name == 'push' && steps.check.outputs.changed == 'true' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          annotations: ${{ steps.meta.outputs.annotations }}
